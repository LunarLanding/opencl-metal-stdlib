//
//  metal_stdlib.h
//  SIMDFromOpenCL
//
//  Created by Philip Turner on 2/26/23.
//

#ifndef metal_stdlib_h
#define metal_stdlib_h

#define EXPOSE_FUNCTION_OVERLOAD_ARGS_1(EXPR, C_TYPE, AIR_TYPE) \
__attribute__((__overloadable__)) C_TYPE EXPR(C_TYPE data) \
  __asm("air." #EXPR "." #AIR_TYPE); \

#define EXPOSE_FUNCTION_I_SCALAR_ARGS_1(EXPR) \
EXPOSE_FUNCTION_OVERLOAD_ARGS_1(EXPR, char, s.i8) \
EXPOSE_FUNCTION_OVERLOAD_ARGS_1(EXPR, short, s.i16) \
EXPOSE_FUNCTION_OVERLOAD_ARGS_1(EXPR, int, s.i32) \
EXPOSE_FUNCTION_OVERLOAD_ARGS_1(EXPR, uchar, u.i8) \
EXPOSE_FUNCTION_OVERLOAD_ARGS_1(EXPR, ushort, u.i16) \
EXPOSE_FUNCTION_OVERLOAD_ARGS_1(EXPR, uint, u.i32) \

#define EXPOSE_FUNCTION_I_VECTOR_ARGS_1(EXPR, VEC_SIZE) \
EXPOSE_FUNCTION_OVERLOAD_ARGS_1(EXPR, char##VEC_SIZE, s.v##VEC_SIZE##i8) \
EXPOSE_FUNCTION_OVERLOAD_ARGS_1(EXPR, short##VEC_SIZE, s.v##VEC_SIZE##i16) \
EXPOSE_FUNCTION_OVERLOAD_ARGS_1(EXPR, int##VEC_SIZE, s.v##VEC_SIZE##i32) \
EXPOSE_FUNCTION_OVERLOAD_ARGS_1(EXPR, uchar##VEC_SIZE, u.v##VEC_SIZE##i8) \
EXPOSE_FUNCTION_OVERLOAD_ARGS_1(EXPR, ushort##VEC_SIZE, u.v##VEC_SIZE##i16) \
EXPOSE_FUNCTION_OVERLOAD_ARGS_1(EXPR, uint##VEC_SIZE, u.v##VEC_SIZE##i32) \

#define EXPOSE_FUNCTION_I_ARGS_1(EXPR) \
EXPOSE_FUNCTION_I_SCALAR_ARGS_1(EXPR) \
EXPOSE_FUNCTION_I_VECTOR_ARGS_1(EXPR,2) \
EXPOSE_FUNCTION_I_VECTOR_ARGS_1(EXPR,3) \
EXPOSE_FUNCTION_I_VECTOR_ARGS_1(EXPR,4) \

#define EXPOSE_FUNCTION_F_ARGS_1(EXPR) \
EXPOSE_FUNCTION_OVERLOAD_ARGS_1(EXPR, float, f32) \
EXPOSE_FUNCTION_OVERLOAD_ARGS_1(EXPR, float2, v2f32) \
EXPOSE_FUNCTION_OVERLOAD_ARGS_1(EXPR, float3, v3f32) \
EXPOSE_FUNCTION_OVERLOAD_ARGS_1(EXPR, float4, v4f32) \

#define BRIDGE_FUNCTION_OVERLOAD_ARGS_1(METAL_EXPR, OPENCL_EXPR, C_TYPE) \
__attribute__((__overloadable__)) \
C_TYPE OPENCL_EXPR(C_TYPE x) { \
  return METAL_EXPR(x); \
}

#define BRIDGE_FUNCTION_I_SCALAR_ARGS_1(METAL_EXPR, OPENCL_EXPR) \
BRIDGE_FUNCTION_OVERLOAD_ARGS_1(METAL_EXPR, OPENCL_EXPR, char) \
BRIDGE_FUNCTION_OVERLOAD_ARGS_1(METAL_EXPR, OPENCL_EXPR, uchar) \
BRIDGE_FUNCTION_OVERLOAD_ARGS_1(METAL_EXPR, OPENCL_EXPR, short) \
BRIDGE_FUNCTION_OVERLOAD_ARGS_1(METAL_EXPR, OPENCL_EXPR, ushort) \
BRIDGE_FUNCTION_OVERLOAD_ARGS_1(METAL_EXPR, OPENCL_EXPR, int) \
BRIDGE_FUNCTION_OVERLOAD_ARGS_1(METAL_EXPR, OPENCL_EXPR, uint) \

#define BRIDGE_FUNCTION_I_VECTOR_ARGS_1(METAL_EXPR, OPENCL_EXPR, VEC_SIZE) \
BRIDGE_FUNCTION_OVERLOAD_ARGS_1(METAL_EXPR, OPENCL_EXPR, char##VEC_SIZE) \
BRIDGE_FUNCTION_OVERLOAD_ARGS_1(METAL_EXPR, OPENCL_EXPR, uchar##VEC_SIZE) \
BRIDGE_FUNCTION_OVERLOAD_ARGS_1(METAL_EXPR, OPENCL_EXPR, short##VEC_SIZE) \
BRIDGE_FUNCTION_OVERLOAD_ARGS_1(METAL_EXPR, OPENCL_EXPR, ushort##VEC_SIZE) \
BRIDGE_FUNCTION_OVERLOAD_ARGS_1(METAL_EXPR, OPENCL_EXPR, int##VEC_SIZE) \
BRIDGE_FUNCTION_OVERLOAD_ARGS_1(METAL_EXPR, OPENCL_EXPR, uint##VEC_SIZE) \

#define BRIDGE_FUNCTION_I_ARGS_1(METAL_EXPR, OPENCL_EXPR) \
BRIDGE_FUNCTION_I_SCALAR_ARGS_1(METAL_EXPR, OPENCL_EXPR) \
BRIDGE_FUNCTION_I_VECTOR_ARGS_1(METAL_EXPR, OPENCL_EXPR, 2) \
BRIDGE_FUNCTION_I_VECTOR_ARGS_1(METAL_EXPR, OPENCL_EXPR, 3) \
BRIDGE_FUNCTION_I_VECTOR_ARGS_1(METAL_EXPR, OPENCL_EXPR, 4) \

#define BRIDGE_FUNCTION_F_ARGS_1(METAL_EXPR, OPENCL_EXPR) \
BRIDGE_FUNCTION_OVERLOAD_ARGS_1(METAL_EXPR, OPENCL_EXPR, float) \
BRIDGE_FUNCTION_OVERLOAD_ARGS_1(METAL_EXPR, OPENCL_EXPR, float2) \
BRIDGE_FUNCTION_OVERLOAD_ARGS_1(METAL_EXPR, OPENCL_EXPR, float3) \
BRIDGE_FUNCTION_OVERLOAD_ARGS_1(METAL_EXPR, OPENCL_EXPR, float4) \

#define OVERLOAD_CLUSTERED_ARGS_1(METAL_SUFFIX, OPENCL_EXPR, C_TYPE) \
__attribute__((__overloadable__)) \
C_TYPE OPENCL_EXPR(C_TYPE x, uint clustersize) \
  __attribute__((enable_if(clustersize == 4 || clustersize == 32, "Cluster size not supported."))) \
{ \
  if (clustersize == 4) { \
    return quad_##METAL_SUFFIX(x); \
  } else { \
    return simd_##METAL_SUFFIX(x); \
  } \
} \

#define CLUSTERED_I_SCALAR_ARGS_1(METAL_SUFFIX, OPENCL_EXPR) \
OVERLOAD_CLUSTERED_ARGS_1(METAL_SUFFIX, OPENCL_EXPR, char) \
OVERLOAD_CLUSTERED_ARGS_1(METAL_SUFFIX, OPENCL_EXPR, uchar) \
OVERLOAD_CLUSTERED_ARGS_1(METAL_SUFFIX, OPENCL_EXPR, short) \
OVERLOAD_CLUSTERED_ARGS_1(METAL_SUFFIX, OPENCL_EXPR, ushort) \
OVERLOAD_CLUSTERED_ARGS_1(METAL_SUFFIX, OPENCL_EXPR, int) \
OVERLOAD_CLUSTERED_ARGS_1(METAL_SUFFIX, OPENCL_EXPR, uint) \

#define CLUSTERED_I_VECTOR_ARGS_1(METAL_SUFFIX, OPENCL_EXPR, VEC_SIZE) \
OVERLOAD_CLUSTERED_ARGS_1(METAL_SUFFIX, OPENCL_EXPR, char##VEC_SIZE) \
OVERLOAD_CLUSTERED_ARGS_1(METAL_SUFFIX, OPENCL_EXPR, uchar##VEC_SIZE) \
OVERLOAD_CLUSTERED_ARGS_1(METAL_SUFFIX, OPENCL_EXPR, short##VEC_SIZE) \
OVERLOAD_CLUSTERED_ARGS_1(METAL_SUFFIX, OPENCL_EXPR, ushort##VEC_SIZE) \
OVERLOAD_CLUSTERED_ARGS_1(METAL_SUFFIX, OPENCL_EXPR, int##VEC_SIZE) \
OVERLOAD_CLUSTERED_ARGS_1(METAL_SUFFIX, OPENCL_EXPR, uint##VEC_SIZE) \

#define BRIDGE_FUNCTION_CLUSTERED_I_ARGS_1(METAL_SUFFIX, OPENCL_EXPR) \
CLUSTERED_I_SCALAR_ARGS_1(METAL_SUFFIX, OPENCL_EXPR) \
CLUSTERED_I_VECTOR_ARGS_1(METAL_SUFFIX, OPENCL_EXPR, 2) \
CLUSTERED_I_VECTOR_ARGS_1(METAL_SUFFIX, OPENCL_EXPR, 3) \
CLUSTERED_I_VECTOR_ARGS_1(METAL_SUFFIX, OPENCL_EXPR, 4) \

#define BRIDGE_FUNCTION_CLUSTERED_F_ARGS_1(METAL_SUFFIX, OPENCL_EXPR) \
OVERLOAD_CLUSTERED_ARGS_1(METAL_SUFFIX, OPENCL_EXPR, float) \
OVERLOAD_CLUSTERED_ARGS_1(METAL_SUFFIX, OPENCL_EXPR, float2) \
OVERLOAD_CLUSTERED_ARGS_1(METAL_SUFFIX, OPENCL_EXPR, float3) \
OVERLOAD_CLUSTERED_ARGS_1(METAL_SUFFIX, OPENCL_EXPR, float4) \

// Declarations

#define DECLARE_UNIFORM_I_REDUCTION(METAL_OP, OPENCL_OP) \
EXPOSE_FUNCTION_I_ARGS_1(quad_##METAL_OP) \
EXPOSE_FUNCTION_I_ARGS_1(simd_##METAL_OP) \
BRIDGE_FUNCTION_I_ARGS_1(simd_##METAL_OP, sub_group_##OPENCL_OP) \
BRIDGE_FUNCTION_I_ARGS_1(simd_##METAL_OP, sub_group_non_uniform_##OPENCL_OP) \
BRIDGE_FUNCTION_CLUSTERED_I_ARGS_1(METAL_OP, sub_group_clustered_##OPENCL_OP) \

#define DECLARE_UNIFORM_F_REDUCTION(METAL_OP, OPENCL_OP) \
EXPOSE_FUNCTION_F_ARGS_1(quad_##METAL_OP) \
EXPOSE_FUNCTION_F_ARGS_1(simd_##METAL_OP) \
BRIDGE_FUNCTION_F_ARGS_1(simd_##METAL_OP, sub_group_##OPENCL_OP) \
BRIDGE_FUNCTION_F_ARGS_1(simd_##METAL_OP, sub_group_non_uniform_##OPENCL_OP) \
BRIDGE_FUNCTION_CLUSTERED_F_ARGS_1(METAL_OP, sub_group_clustered_##OPENCL_OP) \

#define DECLARE_UNIFORM_REDUCTION(METAL_OP, OPENCL_OP) \
DECLARE_UNIFORM_I_REDUCTION(METAL_OP, OPENCL_OP) \
DECLARE_UNIFORM_F_REDUCTION(METAL_OP, OPENCL_OP) \

#define DECLARE_NON_UNIFORM_I_REDUCTION(METAL_OP, OPENCL_OP) \
EXPOSE_FUNCTION_I_ARGS_1(quad_##METAL_OP) \
EXPOSE_FUNCTION_I_ARGS_1(simd_##METAL_OP) \
BRIDGE_FUNCTION_I_ARGS_1(simd_##METAL_OP, sub_group_non_uniform_##OPENCL_OP) \
BRIDGE_FUNCTION_CLUSTERED_I_ARGS_1(METAL_OP, sub_group_clustered_##OPENCL_OP) \

#define DECLARE_NON_UNIFORM_F_REDUCTION(METAL_OP, OPENCL_OP) \
EXPOSE_FUNCTION_F_ARGS_1(quad_##METAL_OP) \
EXPOSE_FUNCTION_F_ARGS_1(simd_##METAL_OP) \
BRIDGE_FUNCTION_F_ARGS_1(simd_##METAL_OP, sub_group_non_uniform_##OPENCL_OP) \
BRIDGE_FUNCTION_CLUSTERED_F_ARGS_1(METAL_OP, sub_group_clustered_##OPENCL_OP) \

#define DECLARE_NON_UNIFORM_REDUCTION(METAL_OP, OPENCL_OP) \
DECLARE_NON_UNIFORM_I_REDUCTION(METAL_OP, OPENCL_OP) \
DECLARE_NON_UNIFORM_F_REDUCTION(METAL_OP, OPENCL_OP) \

DECLARE_UNIFORM_REDUCTION(sum, reduce_add)
DECLARE_UNIFORM_REDUCTION(prefix_inclusive_sum, scan_inclusive_add)
DECLARE_UNIFORM_REDUCTION(prefix_exclusive_sum, scan_exclusive_add)

DECLARE_NON_UNIFORM_REDUCTION(product, reduce_mul)
DECLARE_NON_UNIFORM_REDUCTION(prefix_inclusive_product, scan_inclusive_mul)
DECLARE_NON_UNIFORM_REDUCTION(prefix_exclusive_product, scan_exclusive_mul)

#undef DECLARE_NON_UNIFORM_REDUCTION
#undef DECLARE_NON_UNIFORM_F_REDUCTION
#undef DECLARE_NON_UNIFORM_I_REDUCTION
#undef DECLARE_UNIFORM_REDUCTION
#undef DECLARE_UNIFORM_F_REDUCTION
#undef DECLARE_UNIFORM_I_REDUCTION

#undef BRIDGE_FUNCTION_CLUSTERED_F_ARGS_1
#undef BRIDGE_FUNCTION_CLUSTERED_I_ARGS_1
#undef CLUSTERED_I_VECTOR_ARGS_1
#undef CLUSTERED_I_SCALAR_ARGS_1
#undef OVERLOAD_CLUSTERED_ARGS_1

#undef BRIDGE_FUNCTION_F_ARGS_1
#undef BRIDGE_FUNCTION_I_ARGS_1
#undef BRIDGE_FUNCTION_I_VECTOR_ARGS_1
#undef BRIDGE_FUNCTION_I_SCALAR_ARGS_1
#undef BRIDGE_FUNCTION_OVERLOAD_ARGS_1

#undef EXPOSE_FUNCTION_F_ARGS_1
#undef EXPOSE_FUNCTION_I_ARGS_1
#undef EXPOSE_FUNCTION_I_VECTOR_ARGS_1
#undef EXPOSE_FUNCTION_I_SCALAR_ARGS_1
#undef EXPOSE_FUNCTION_OVERLOAD_ARGS_1

#endif /* metal_stdlib_h */
